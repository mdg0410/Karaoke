@model Karaoke.ViewModels.AdminViewModel

@{
    ViewData["Title"] = "Admin - Mesas";
}

<nav>
    <ul class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" data-bs-target="#mesas" href="#">Mesas</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" data-bs-target="#pedidos" href="#">Pedidos</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" data-bs-target="#canciones" href="#">Canciones</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" data-bs-target="#avanzado" href="#">Avanzado</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" data-bs-target="#cierre" href="#">Cierre</a></li>
    </ul>
</nav>

<div class="tab-content">
    <div id="mesas" class="tab-pane fade show active">
        <div class="row mt-3">
            <div class="col-md-8">
                <div class="col-md-12">
                    <ul class="nav nav-pills nav-fill">
                        @foreach (var estado in Model.Mesas.EstadosMesa)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(estado.IdEstadoMesa == 1 ? "active" : "")" data-bs-toggle="tab" data-bs-target="#@estado.NombreEstado.ToLower()" data-estado="@estado.NombreEstado.ToLower()" href="#">
                                    @estado.NombreEstado
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="mesas-container d-flex flex-wrap">
                    @for (int i = 1; i <= 15; i++) 
                    {
                        var mesa = Model.Mesas.ListaMesas.FirstOrDefault(m => m.NumeroMesa == i);
                        var estadoMesa = mesa?.IdEstadoMesaNavigation.NombreEstado.ToLower() ?? "libre"; 

                        <div class="mesa @estadoMesa" data-mesa-id="@i">
							@i
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5>Opciones de Mesa</h5>
                    </div>
                    <div class="card-body">
                        <div>
                            <h5>Seleccionar Mesa</h5>
                            <div class="input-group mb-3">
                                <span class="input-group-text">Mesa #</span>
                                <input type="number" class="form-control" id="mesa-number" aria-label="Mesa #">
                            </div>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="estado-especial">
                                <label class="form-check-label" for="estado-especial">Estado Especial</label>
                            </div>
                        </div>

                        <div class="mt-3">
                            <h5>Total Mesas en Cuenta</h5>
                            <div class="p-3 border bg-light">$0.00</div> 
                        </div>

                        <div class="mt-3">
                            <h5>Total Mesas Consumido</h5>
                            <div class="p-3 border bg-light">@Model.TotalSumado.TotalSumado</div> 
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="pedidos" class="tab-pane fade">
        <h3>Pedidos</h3>
        </div>

    <div id="canciones" class="tab-pane fade">
        <h3>Canciones</h3>
        </div>

    <div id="avanzado" class="tab-pane fade">
        <h3>Avanzado</h3>
        </div>

    <div id="cierre" class="tab-pane fade">
        <h3>Cierre</h3>
        </div>
</div>

<style>
    /* Estilos para las mesas */
    .mesa {
        width: 80px; 
        height: 80px; 
        border: 1px solid #ccc;
        margin: 10px; 
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        cursor: pointer;
        background-size: cover; 
        border-radius: 10px; 
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); 
    }

    .mesa.libre { background-image: url('img/Mesas/Mesa-Libre.svg'); }

        .mesa.ocupada {
            background-image: url('img/Mesas/Mesa-Ocupada.svg');
        }

        .mesa.reservada {
            background-image: url('img/Mesas/Mesa-Reservada.svg');
        }

        .mesa.fueraservicio {
            background-image: url('img/Mesas/Mesa-FueraServicio.svg');
        }

        .mesa.cuenta {
            background-image: url('img/Mesas/Mesa-Cuenta.svg');
        }

    /* Estilos para el panel lateral */
    .card {
        border: none; 
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); 
    }

    .card-header {
        background-color: #007bff; 
        color: #fff; 
    }

    /* Estilos para los totales */
    .p-3.border.bg-light {
        font-size: 1.2em; 
        font-weight: bold; 
    }
</style>

<script>
    $(document).ready(function() {
        // Manejar clics en las mesas
        $(".mesa").click(function() {
            const mesaId = $(this).data("mesa-id");
            const estado = $(".nav-pills .nav-link.active").data("estado"); // Obtener el estado activo del segundo nav

            // Actualizar el estado de la mesa en el servidor (llamada AJAX)
            actualizarEstadoMesa(mesaId, estado);

            // Actualizar la imagen de la mesa (usando clases CSS)
            $(this).removeClass("libre ocupada reservada fuera-de-servicio cuenta");
            $(this).addClass(estado);
        });

        // Función para simular la actualización del estado en el servidor
        function actualizarEstadoMesa(mesaId, nuevoEstado) {
            // Lógica para enviar la actualización al servidor (AJAX)
            // ... (Aquí debes implementar la lógica AJAX real) ...
            console.log(`Actualizando mesa ${mesaId} a estado ${nuevoEstado}`);
        }
    });
</script>